<<복습>>
1. jsp는 html에 ( 자바코드 ) 를 포함한다.
2. jsp 는 웹서버에서 요청 받은 것을 ( was ) 에게 처리를 위하여 요청을 전달한다.
3. jsp 는 요청 처리를 위해 .java로 변환이 되는데 이것을 ( 서블릿 ) 이라고 한다.
4. 3번의 ( 서블릿 )을 처리하는 기능이 ( 웹컨테이너 ) 이다.
* 톰캣은 웹서버 + WAS
* HTML, CSS, JAVA 에 대한 리소스(자원) 요청은 웹컨테이너가 처리하지 않음
5. JSP 에는 내장객체가 있습니다. DAY1에서 사용한것은 ( out ), ( request )
6. request는 사용자가 요청한 정보를 갖고 있습니다. 그중에서
파라미터는 사용자가 보낸 요청 데이터입니다. 

<<요청 파라미터 보내기 방법 2>>
+ form 태그 사용
	- 입력태그(input, select)의 name 속성값이 파라미터 이름
							-value 속성값이 파라미터 값
	- a 태그 href 는 요청 method 가 항상 get. href는 서버의 주소
	- form 태그는 method 방식을 'get', 'post' 지정
				-get 방식은 자동으로 문자인코딩을 UTF-8로 함
				-post 방식은 문자 인코딩을 직접 설정해야함
				action 속성값으로 서버의 주소를 정함
	- input 의 disabled 가 true 이면 파라미터 전송이 안됨
              readonly 가 true 일 때 파라미터 전송 가능. 편집만 불가
	- input type = hidden(숨김) 일때는 화면 표시는 안되고 파라미터 전송은 함
	
회원정보 수정과 같은 방법으로 아래 소스파일 완성
MemberRegister.jsp
RegisterSave.jsp
<<jsp 액션태그>>
jsp 안에서 내장객체를 이용하여 작성하는 자바코드 대신에 사용하는 태그

1. jsp:include
	- 외부 jsp 파일을 포함시킴. 컴파일된 .class 를 포함
	- 여러 jsp 파일에서 공통적으로 사용되는 코드 부분을 
	반복해서 코드 작성하지않고 파일로 생성해서 include
	
2. jsp:param
	- jsp:include 에서 포함시키는 jsp에 파라미터를 전달하기

3. jsp:useBean 태그 - 속성 id : 자바빈 id. 변수명,  class : 자바빈(객체)으로 만들어질 패키지명. 클래스 지정
			scope : 4가지 자바빈즈가 사용될수 있는 영역 설정. pageContext, request, session, application
	-jsp:setProperty : 값 저장. getParameter메소드 + .setter 메소드 실행
			- 속성 종류 : property : 자바빈을 만든 클래스의 필드(변수), 
					   name : 자바빈 id를 설정 
					   param : input 태그의 name
					   property="*" 로 하면 모든 파라미터를 가져올 수 있음
					   (단 input 태그 name 속성, dto 클래스의 필드명을 같게 함)
	-jsp:getProperty : 출력
(연습) RegisterSave.jsp 에서 사용(getParameter 대신 사용)